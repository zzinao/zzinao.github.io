{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"87f0c589-e178-51a0-af1a-9776e3234fe4","excerpt":"한 주간 공부한 내용 정리 1. Javascript Prototype 1-1) 자바스크립트 객체의 Prototype Link 프로토타입 기반 객체지향 설계와 클래스 기반 객체지향 설계의 차이점을 공부했다. 1-2) Object.create()와 new Function 상속의 차이점 class가 아닌 ES5 문법으로 상속을 진행했고 프로토타입 체이닝이 어떻게 진행되는지 알아보았다. : 참고 자료 프로토타입 기반 언어, 자바스크립트 ES6 Class는 단지 prototype 상속의 문법설탕일 뿐인가? 자바스크립트는 왜 프로토타입을 선택했을까 2. 자바스크립트의 비동기 개념 이해 2-1) 실행 컨텍스트의 동작 방식 2-2) Microtask, MacroTask, AnimationFrame의 차이점 각 task queue의 실행 시점과 어떠한 메서드가 속해있는지를 알아보았다. : 참고 자료 What the heck is the event loop anyway? Jake Archibald:…","frontmatter":{"categories":"WIL","title":"WIL 3월 2주차","date":"March 15, 2024"},"fields":{"slug":"/wil-240302/"}}},{"node":{"id":"9c51e28e-20b1-5fea-a2a1-87933fa8a349","excerpt":"1. 판도라의 상자.. 아니 컴포넌트를 열다 올해 새 업무를 들어가면서, 작년에 만든 프로젝트를 새로 개편하게 되었습니다. 프로젝트 베이스는 같지만 기능이 새로 추가되고 페이지 화면 UI가 완전히 바뀌어서 기존 코드를 기반으로 새로 짜야 하는 상황이라 끝난 줄만 알았던 그 코드들을 오랜만에 꺼내보니 경악을 금치 못했습니다. (물론 그 당시에도 진행하면서 경악했지만..) 위와 같이 props를 적게는 10개 많게는 20개를 넘는 컴포넌트가 넘쳐났기 때문입니다.ㅎㅎ\n물론 props를 무작정 많이 받는 게 잘못은 아니라곤 생각하지만… 저렇게 되면 1)가독성이 매우 나빠지고 2)유지 보수가 힘들고 3)에러 추적이 힘듭니다. 물론 컴포넌트가 서버 api를 받아서 보여주는 거라면 spread 문법을 통해서 간결하게 보여줄 순 있겠지만 같은 값이라도 api마다 변수명이 달랐기에.. 재 생각엔 한 번의 가공 처리가 필수였습니다. 🥹 잠시만! 저렇게 된 이유가 있다구요..! 👼🏻(반년전의 나) : …","frontmatter":{"categories":"리팩토링","title":"리팩토링에 대한 고찰1 (feat.컴파운드 패턴)","date":"March 10, 2024"},"fields":{"slug":"/refactoring-compound-pattern/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"지나","bio":{"role":"개발자","description":["운수대통","만사형통","무사무려"],"thumbnail":"profile2.jpg"},"social":{"github":"https://github.com/zzinao","tiStory":"https://cometolife.tistory.com/"}}}}},"pageContext":{}},"staticQueryHashes":["1073350324","1956554647","2938748437","3350743975"]}